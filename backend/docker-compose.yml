version: '3.8'

services:
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6380:6379"
    env_file:
      - .env
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${DB}
    networks:
      - app-network

  postgres:
    image: postgres:15
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5
    

  app:
    build: .
    restart: always
    ports:
      - "9808:9808"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_ADDR=${Addr}
      - REDIS_DB=${DB}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - PORT=${PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
